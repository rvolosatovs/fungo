// Copyright 2021 Romans Volosatovs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Package slices provides general functions that work for all slice types.
package slices

import (
	"sync"

	"github.com/rvolosatovs/fungo/collections"
)

func Collect[T any](r collections.Ranger[T], vs []T) []T {
	var mu sync.Mutex
	r.Range(func(v T) bool{
		mu.Lock()
		vs = append(vs, v)
		mu.Unlock()
		return true
	})
	return vs
}

type ValueRanger[T any] []T

func (r ValueRanger[T]) Range(f func(T) bool) {
	for _, v := range r {
		if !f(v) {
			return
		}
	}
}

func Values[T any] (s []T) ValueRanger[T] {
	return ValueRanger[T](s)
}
