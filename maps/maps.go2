// Copyright 2021 Romans Volosatovs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Package maps provides general functions that work for all map types.
package maps

type KeyRanger[K comparable, V any] map[K]V

func (r KeyRanger[T, Unused]) Range(f func(T) bool) {
	for k := range r {
		if !f(k) {
			return
		}
	}
}

func Keys[K comparable, V any] (m map[K]V) KeyRanger[K, V] {
	return KeyRanger[K, V](m)
}

type ValueRanger[K comparable, V any] map[K]V

func (r ValueRanger[Unused, T]) Range(f func(T) bool) {
	for _, v := range r {
		if !f(v) {
			return
		}
	}
}

func Values[K comparable, V any] (m map[K]V) ValueRanger[K, V] {
	return ValueRanger[K, V](m)
}
